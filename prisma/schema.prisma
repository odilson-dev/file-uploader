// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  folders   Folder[]
  files     File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Folder {
  id         Int          @id @default(autoincrement())
  name       String
  user       User         @relation(fields: [userId], references: [id])
  userId     Int
  subfolders Folder[]     @relation("Subfolders")
  parent     Folder?      @relation("Subfolders", fields: [parentId], references: [id])
  parentId   Int?
  files      File[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  SharedItem SharedItem[]

  @@unique([name, parentId])
}

model File {
  id         Int          @id @default(autoincrement())
  name       String
  path       String
  size       Int
  type       String
  folder     Folder?      @relation(fields: [folderId], references: [id])
  folderId   Int?
  user       User?        @relation(fields: [userId], references: [id])
  userId     Int?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deletedAt  DateTime?
  SharedItem SharedItem[]

  @@unique([name, folderId])
}

model SharedItem {
  id         Int       @id @default(autoincrement())
  shareToken String    @unique
  type       ShareType // Enum to distinguish between files and folders
  file       File?     @relation(fields: [fileId], references: [id])
  fileId     Int?
  folder     Folder?   @relation(fields: [folderId], references: [id])
  folderId   Int?
  expiresAt  DateTime
  createdAt  DateTime  @default(now())
}

enum ShareType {
  FILE
  FOLDER
}
