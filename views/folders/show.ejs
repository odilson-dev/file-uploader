<!DOCTYPE html>
<html lang="en">
  <%- include('../layout/head', { title: "Show Folder" }); -%>
  <body class="flex flex-col min-h-screen">
    <%-
    include('../dialog-boxes/create-folder'); -%>
    <%- include('../layout/header'); -%> <% if(folder){ %>

    <div class="content flex-1 px-6 py-4 bg-gray-100 flex flex-col">
      <div class="flex justify-between items-center">
        <div class="flex items-center gap-3 ml-1">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="size-5 sm:size-6"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 0 0-1.883 2.542l.857 6a2.25 2.25 0 0 0 2.227 1.932H19.05a2.25 2.25 0 0 0 2.227-1.932l.857-6a2.25 2.25 0 0 0-1.883-2.542m-16.5 0V6A2.25 2.25 0 0 1 6 3.75h3.879a1.5 1.5 0 0 1 1.06.44l2.122 2.12a1.5 1.5 0 0 0 1.06.44H18A2.25 2.25 0 0 1 20.25 9v.776"
            />
          </svg>
          <h1 class="text-sm sm:text-xl font-bold"><%= folder.name %></h1>
        </div>

        <div class="flex text-[12px] sm:text-sm">
          <button
            id="createSubFolderBtn"
            type="button"
            class="flex items-center px-4 py-2 text-blue-600 hover:underline"
            data-parent-id="<%= folder.id %>"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="size-5 mr-2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 10.5v6m3-3H9m4.06-7.19-2.12-2.12a1.5 1.5 0 0 0-1.061-.44H4.5A2.25 2.25 0 0 0 2.25 6v12a2.25 2.25 0 0 0 2.25 2.25h15A2.25 2.25 0 0 0 21.75 18V9a2.25 2.25 0 0 0-2.25-2.25h-5.379a1.5 1.5 0 0 1-1.06-.44Z"
              />
            </svg>
            New Folder
          </button>

          <button
            data-modal-toggle="upload-modal"
            task="upload"
            parent-name="My Documents"
            id="open-upload-btn"
            class="flex items-center px-4 py-2 text-blue-600 hover:underline"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="size-5 mr-2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5m-13.5-9L12 3m0 0 4.5 4.5M12 3v13.5"
              />
            </svg>

            Upload file
          </button>
        </div>
      </div>

      <div class="overflow-x-auto pb-16">
        <div class="rounded-lg border border-gray-300 my-3 bg-white shadow-md">
          <table class="w-full">
            <thead class="bg-gray-200 text-black text-sm">
              <tr class="text-left border-b">
                <th class="px-4 py-2 font-normal" style="width: 30%">Name</th>
                <th class="px-4 py-2 font-normal" style="width: 10%">Files</th>
                <th class="px-4 py-2 font-normal" style="width: 10%">
                  Sub-folders
                </th>
                <th
                  class="hidden sm:table-cell px-4 py-2 font-normal"
                  style="width: 10%"
                >
                  Created
                </th>
                <th
                  class="hidden sm:table-cell px-4 py-2 font-normal"
                  style="width: 10%"
                >
                  Last Updated
                </th>
                <th class="px-4 py-2 font-normal" style="width: 6%">Options</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-200 text-[12px] sm:text-sm">
              <% if(folder.subfolders.length + folder.files.length >= 1){%>

                <% folder.subfolders.map((folder)=>{ %>
                  <tr class="hover:bg-gray-50 cursor-pointer transition-colors">
                    <td class="px-4 py-2 text-blue-600 hover:underline">
                      <%= folder.name %>
                    </td>
                    <td class="px-4 py-2"><%= folder.files.length %></td>
                    <td class="hidden sm:table-cell px-4 py-2">
                      <%= folder.subfolders.length %>
                    </td>
                    <td class="hidden sm:table-cell px-4 py-2">
                      <%= new Date(folder.createdAt).toLocaleDateString('en-US', {
                      day: 'numeric', month: 'long', year: 'numeric' }) %>
                    </td>
                    <td>
                      <%= new Date(folder.updatedAt).toLocaleDateString('en-US', {
                      day: 'numeric', month: 'long', year: 'numeric' }) %>
                    </td>
                    <td class="px-4 py-2">
                      <a href="/folders/<%= folder.id %>/edit">Rename</a>
                      <!-- <a href="/folders/<%= folder.id %>/add-file">Add file</a>
                        <a href="/folders/new">Create a folder</a> -->
                    </td>
                  </tr>
    


              <% }) %>
              
              <% } else {%> 
                <tr class="bg-gray-50">
                  <td colspan="6" class="text-center py-4 text-gray-500 text-sm">
                      This folder is empty.
                  </td>
              </tr>

              <%} %>

             
        
            </tbody>
          </table>
        </div>
      </div>
    </div>
    </div>

    <% } else { %>
    <div class="content flex-1 px-6 py-4 bg-gray-100 flex flex-col">
      <h1 class="text-center">Folder not found</h1>
      <div class="flex items-center">
        <a
          href="/folders"
          class="py-3 px-1 text-blue-600 hover:text-blue-800 font-medium flex items-center space-x-2"
        >
          <span class="text-base">‚Üê My Documents</span>
        </a>
      </div>
    </div>
    <% } %> <%- include('../layout/footer'); -%>
    <script>      // Get the modal element
      const folderModal = document.getElementById("folderModal");
      // Get the button elements
      const createSubFolderBtn = document.getElementById("createSubFolderBtn");
      const editFolderBtnList = document.querySelectorAll(".editFolderBtn");
      // Get the close element
      const closeBtn = document.getElementsByClassName("close")[0];
      // Get the modal title and folder form elements
      const modalTitle = document.getElementById("modalTitle");
      const folderForm = document.getElementById("folderForm");
      const folderNameInput = document.getElementById("folderName");
      const parentId = createSubFolderBtn.dataset.parentId
    
      let currentFolderId = null;

      // To hold current folder state
      let isEditMode = false;
      let currentFolderName = "";

      // Event listener for opening the "Create Folder" modal
      createSubFolderBtn.onclick = function () {
        isEditMode = false;
        modalTitle.textContent = "Create Sub Folder";
        folderNameInput.value = ""; // Clear input
        folderModal.style.display = "block";
      };

      // Event listener for opening the "Edit Folder" modal
      editFolderBtnList.forEach((button) => {
        button.onclick = function () {
          isEditMode = true;
          folderNameInput.value = button.dataset.folderName;
          currentFolderId = button.dataset.folderId;
          folderModal.style.display = "block";
        };
      });

      // Event listener to close the modal
      closeBtn.onclick = function () {
        folderModal.style.display = "none";
      };

      // Close the modal if user clicks outside of it
      window.onclick = function (event) {
        if (event.target === folderModal) {
          folderModal.style.display = "none";
        }
      };

      // Event listener for saving the form
      folderForm.onsubmit = function (event) {
        event.preventDefault(); // Prevent form from submitting the normal way

        const folderName = folderNameInput.value.trim();

        if (folderName === "") {
          alert("Folder name is required.");
          return;
        }

        if (isEditMode) {
          editFolder(currentFolderId, folderName);
          alert(`Folder updated: ${currentFolderName}`);
        } else {
          // Create folder functionality
          createSubFolder(folderName, parentId);
        }

        // Close the modal after saving
        folderModal.style.display = "none";
      };

      // Function to create a folder (POST request)
      async function createSubFolder(folderName, parentId) {
        const response = await fetch(`/folders/${parentId}/add-subfolder`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name: folderName }),
        });
        console.log(response)
        if (response.ok) {
          const result = await response.json();
          alert(`Folder created: ${result.name}`);
        } else {
          alert("Error creating folder.");
        }
      }

      // Function to edit a folder (PUT request)
      async function editFolder(folderId, folderName) {
        const response = await fetch(`/folders/${folderId}/update`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ name: folderName }),
        });

        if (response.ok) {
          const result = await response.json();
          alert(`Folder updated: ${result.name}`);
        } else {
          alert("Error updating folder.");
        }
      }</script>
  </body>
</html>
